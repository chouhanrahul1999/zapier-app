// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String
  password String
  zaps     Zap[]
}

model Zap {
  id        String    @id @default(uuid())
  triggerid String
  userId    Int
  trigger   Trigger?
  action    Action[]
  user      User      @relation(fields: [userId], references: [id])
  ZapRuns   ZapRuns[]
}

model Trigger {
  id        String            @id @default(uuid())
  zapId     String            @unique
  triggerid String
  type      AvailableTriggers @relation(fields: [triggerid], references: [id])
  zap       Zap               @relation(fields: [zapId], references: [id])
}

model Action {
  id                String          @id @default(uuid())
  zapId             String
  zap               Zap             @relation(fields: [zapId], references: [id])
  actionId          String
  type              AvailableAction @relation(fields: [actionId], references: [id])
  availableActionId String?
  sortingId         Int             @default(0)
}

model AvailableAction {
  id     String   @id @default(uuid())
  name   String
  action Action[]
}

model AvailableTriggers {
  id       String    @id @default(uuid())
  name     String
  triggers Trigger[]
}

model ZapRuns {
  id           String         @id @default(uuid())
  zapId        String
  metaData     Json
  zap          Zap            @relation(fields: [zapId], references: [id])
  zapRunOutbox ZapRunsOutbox?
}

model ZapRunsOutbox {
  id       String  @id @default(uuid())
  zapRunId String  @unique
  zapRun   ZapRuns @relation(fields: [zapRunId], references: [id])
}